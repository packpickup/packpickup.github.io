{"version":3,"sources":["components/Header.tsx","pages/Home.tsx","components/Rating.tsx","components/VehicleDetailCard.tsx","components/VehicleDetailsModal.tsx","pages/SearchResults.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Header","Row","className","Col","xs","style","textAlign","marginTop","to","src","process","alt","Home","useEffect","document","title","vehicleTypes","map","vehicleType","onClick","window","gtag","event_category","event_label","value","type","loading","alert","Rating","rating","rounded","Math","ceil","Array","_","i","VehicleDetailCard","vehicle","Number","driver","name","area","city","VehicleDetailsModal","selectedVehicle","onHide","target","mobile","href","split","encodeURI","whatsAppMessage","sm","e","preventDefault","SearchResults","vehicleTypeId","useLocation","search","useState","show","setShow","activeVehicle","setActiveVehicle","vehiclesByType","useMemo","vehicles","filter","filteredVehicle","drivers","find","length","Modal","animation","undefined","dialogClassName","App","basename","Container","maxWidth","exact","path","Date","getFullYear","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c21e5d73.chunk.js","sourcesContent":["import \"./Header.scss\";\n\nimport { FunctionComponent } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header: FunctionComponent = () => {\n  return (\n    <Row className=\"header\">\n      <Col xs=\"12\" style={{ textAlign: \"center\", marginTop: 12 }}>\n        <Link to=\"/\">\n          <img\n            className=\"logo\"\n            src={`${process.env.PUBLIC_URL}/logo.svg`}\n            alt=\"Pack pickup\"\n          />\n        </Link>\n        <div className=\"divider\" />\n      </Col>\n    </Row>\n  );\n};\n","import \"./Home.scss\";\n\nimport { FunctionComponent, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport vehicleTypes from \"../data/vehicle-types.json\";\n\nexport const Home: FunctionComponent = () => {\n  useEffect(() => {\n    document.title = \"PackPickup.com\";\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <Row>\n        <Col xs=\"12\" className=\"banner-wrapper\">\n          <div className=\"user\">\n            <span>Guest</span>\n            <img src={process.env.PUBLIC_URL + \"/avatar.svg\"} alt=\"User\" />\n          </div>\n          <img\n            src={process.env.PUBLIC_URL + \"/home-bg.jpg\"}\n            alt=\"traffic on road\"\n            className=\"banner\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\">\n          <h1 className=\"title\">Find Transportation Solutions!</h1>\n        </Col>\n      </Row>\n      <Row>\n        {vehicleTypes.map((vehicleType) => (\n          <Col xs=\"6\" key={vehicleType[\"vehicle-type-id\"]} className=\"v-type\">\n            <Link\n              className=\"v-link\"\n              to={`/search-results/?v-type=${vehicleType[\"vehicle-type-id\"]}`}\n              onClick={() => {\n                window.gtag(\"event\", \"click\", {\n                  event_category: \"Home page\",\n                  event_label: \"vehicle-type-click\",\n                  value: `${vehicleType[\"vehicle-type-id\"]}-${vehicleType.type}`,\n                });\n              }}\n            >\n              <img\n                loading=\"lazy\"\n                src={`${process.env.PUBLIC_URL}/vehicle-types/${vehicleType[\"image-url\"]}`}\n                alt={vehicleType.type}\n              />\n            </Link>\n          </Col>\n        ))}\n      </Row>\n      <Row>\n        <Col>\n          <img\n            loading=\"lazy\"\n            onClick={() => {\n              window.alert(\"Work in progress...\");\n              window.gtag(\"event\", \"click\", {\n                event_category: \"Home page\",\n                event_label: \"see-more-click\",\n                value: \"See more vehicle types\",\n              });\n            }}\n            className=\"see-more\"\n            src={`${process.env.PUBLIC_URL}/vehicle-types/see-more-vehicles.svg`}\n            alt=\"See more\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import \"./Rating.scss\";\n\nimport { FunctionComponent } from \"react\";\n\ntype Props = {\n  rating: number;\n};\n\nexport const Rating: FunctionComponent<Props> = ({ rating }) => {\n  const rounded = Math.ceil(rating);\n  return (\n    <span className=\"rating-stars\">\n      {[...Array(rounded)].map((_, i) => \"★\")}\n      {[...Array(5 - rounded)].map((_, i) => \"☆\")}\n    </span>\n  );\n};\n","import \"./VehicleDetailCard.scss\";\n\nimport { FunctionComponent } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nimport { Rating } from \"../components/Rating\";\nimport drivers from \"../data/drivers.json\";\nimport vehicles from \"../data/vehicles.json\";\n\ntype Vehicle = typeof vehicles[0] & { driver: typeof drivers[0] };\n\ntype Props = {\n  vehicle: Vehicle;\n  onClick?: () => void;\n  className?: string;\n};\n\nexport const VehicleDetailCard: FunctionComponent<Props> = ({\n  vehicle,\n  onClick,\n  className = \"\",\n}) => {\n  return (\n    <Row\n      className={`result-item ${className} ${onClick ? \"item-clickable\" : \"\"}`}\n      onClick={onClick}\n    >\n      <Col xs=\"4\" className=\"v-main-img\">\n        <img\n          loading=\"lazy\"\n          src={`${process.env.PUBLIC_URL}/vehicles/${vehicle[\"vehicle-id\"]}/${\n            onClick ? \"main\" : \"driver\"\n          }.jpg`}\n          alt={vehicle[\"vehicle-brand\"]}\n        />\n        <div className=\"mobile-only\">\n          <Rating rating={Number(vehicle.driver[\"rating-stars\"])} />\n        </div>\n      </Col>\n      <Col xs=\"8\" className=\"v-info\">\n        <div className=\"rating desktop-only\">\n          <Rating rating={Number(vehicle.driver[\"rating-stars\"])} />\n        </div>\n        <div>\n          <strong>\n            {vehicle[\"vehicle-brand\"]} - {vehicle[\"brand-model\"]} -{\" \"}\n            {vehicle[\"model-year\"]}\n          </strong>\n        </div>\n        <div>\n          {vehicle.driver && (\n            <>\n              <div>\n                <img\n                  className=\"driver-name-avatar-icon\"\n                  src={`${process.env.PUBLIC_URL}/driver-avatar.svg`}\n                  alt=\"Driver\"\n                />{\" \"}\n                {vehicle.driver.name}\n              </div>\n              <div>\n                <img\n                  className=\"driver-areas-icon\"\n                  src={`${process.env.PUBLIC_URL}/map-point.svg`}\n                  alt=\"Areas\"\n                />{\" \"}\n                {vehicle.driver.area}, {vehicle.driver.city}\n              </div>\n            </>\n          )}\n        </div>\n      </Col>\n    </Row>\n  );\n};\n","import \"./VehicleDetailsModal.scss\";\n\nimport { FunctionComponent } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nimport drivers from \"../data/drivers.json\";\nimport vehicles from \"../data/vehicles.json\";\nimport { VehicleDetailCard } from \"./VehicleDetailCard\";\n\ntype Props = {\n  selectedVehicle: typeof vehicles[0] & { driver: typeof drivers[0] };\n  onHide: () => void;\n};\n\nexport const VehicleDetailsModal: FunctionComponent<Props> = ({\n  selectedVehicle,\n  onHide,\n}) => {\n  return (\n    <div className=\"vehicle-details\">\n      <div className=\"modal-close\">\n        <img\n          title=\"Close\"\n          src={`${process.env.PUBLIC_URL}/close.svg`}\n          alt=\"Close\"\n          onClick={onHide}\n        />\n      </div>\n\n      <VehicleDetailCard className=\"v-card\" vehicle={selectedVehicle} />\n\n      <Row className=\"comms\">\n        <Col xs=\"12\" className=\"text-right\">\n          <a\n            target=\"whatsapp\"\n            onClick={() => {\n              window.gtag(\"event\", \"click\", {\n                event_category: \"Driver contacted\",\n                event_label: \"whatsapp-click\",\n                value: `${selectedVehicle.driver[\"driver-id\"]}-${selectedVehicle.driver.name}-${selectedVehicle.driver.mobile}`,\n              });\n            }}\n            href={`https://wa.me/${selectedVehicle.driver.mobile}?text=Hello ${\n              selectedVehicle.driver.name.split(\" \")[0]\n            },%0a${encodeURI(\n              \"Message from: https://packpickup.com\"\n            )} %0a${encodeURI(whatsAppMessage)}`}\n          >\n            <span>WhatsApp</span>\n            <img\n              alt=\"WhatsApp\"\n              src={`${process.env.PUBLIC_URL}/comms/whatsapp.png`}\n            />\n          </a>\n        </Col>\n      </Row>\n\n      <Row className=\"photos\">\n        <Col xs=\"12\">\n          <strong>Reference photos:</strong>\n        </Col>\n        <Col xs=\"12\" sm=\"6\">\n          <img\n            loading=\"lazy\"\n            alt=\"vehicle main\"\n            src={`${process.env.PUBLIC_URL}/vehicles/${selectedVehicle[\"vehicle-id\"]}/main.jpg`}\n          />\n        </Col>\n        {[...Array(selectedVehicle[\"number-of-pictures-ref\"])].map((_, i) => (\n          <Col xs=\"12\" sm=\"6\" key={i}>\n            <img\n              key={i}\n              loading=\"lazy\"\n              alt=\"vehicle\"\n              src={`${process.env.PUBLIC_URL}/vehicles/${\n                selectedVehicle[\"vehicle-id\"]\n              }/${i + 1}.jpg`}\n            />\n          </Col>\n        ))}\n      </Row>\n\n      <Row>\n        <button\n          className=\"close\"\n          onClick={(e) => {\n            e.preventDefault();\n            onHide();\n          }}\n        >\n          Close\n        </button>\n      </Row>\n    </div>\n  );\n};\n\nconst whatsAppMessage =\n  \"Are you available for packaging and transportation service?\";\n","import \"./SearchResults.scss\";\n\nimport { FunctionComponent, useEffect, useMemo, useState } from \"react\";\nimport { Col, Modal, Row } from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { VehicleDetailCard } from \"../components/VehicleDetailCard\";\nimport { VehicleDetailsModal } from \"../components/VehicleDetailsModal\";\nimport drivers from \"../data/drivers.json\";\nimport vehicleTypes from \"../data/vehicle-types.json\";\nimport vehicles from \"../data/vehicles.json\";\n\nexport const SearchResults: FunctionComponent = () => {\n  const { search } = useLocation();\n  const vehicleTypeId = search.split(\"?\")[1].split(\"=\")[1];\n  const [show, setShow] = useState(false);\n  const [activeVehicle, setActiveVehicle] = useState<\n    typeof vehicles[number] & { driver: typeof drivers[number] }\n  >();\n\n  const vehiclesByType = useMemo(() => {\n    const filteredVehicles = vehicles.filter(\n      (vehicle) => vehicle[\"vehicle-type-id\"] === vehicleTypeId\n    );\n\n    return filteredVehicles.map((filteredVehicle) => ({\n      ...filteredVehicle,\n      driver:\n        drivers.find(\n          (driver) => driver[\"vehicle-id\"] === filteredVehicle[\"vehicle-id\"]\n        ) || drivers[0],\n    }));\n  }, [vehicleTypeId]);\n\n  const vehicleType = useMemo(() => {\n    return (\n      vehicleTypes.find(\n        (vehicleType) => vehicleType[\"vehicle-type-id\"] === vehicleTypeId\n      ) || vehicleTypes[0]\n    );\n  }, [vehicleTypeId]);\n\n  useEffect(() => {\n    document.title = `${vehicleType.type} - PackPickup.com`;\n  }, [vehicleType.type]);\n\n  return (\n    <div className=\"search-results\">\n      <Row className=\"header\">\n        <Col xs=\"7\" sm=\"8\">\n          <div className=\"user\">\n            <img\n              loading=\"lazy\"\n              src={process.env.PUBLIC_URL + \"/avatar.svg\"}\n              alt=\"User\"\n            />\n            <span>Guest</span>\n          </div>\n          <h1>{vehicleType.type}</h1>\n        </Col>\n        <Col xs=\"5\" sm=\"4\">\n          <img\n            loading=\"lazy\"\n            className=\"v-type-img\"\n            src={`${process.env.PUBLIC_URL}/vehicle-types/simple/${vehicleType[\"image-url\"]}`}\n            alt={vehicleType.type}\n          />\n        </Col>\n      </Row>\n\n      {vehiclesByType.length === 0 ? (\n        <div>\n          No vehicles found. Please <Link to=\"/\">click here</Link> to navigate\n          to home page\n        </div>\n      ) : (\n        vehiclesByType.map((vehicle) => {\n          return (\n            <VehicleDetailCard\n              key={vehicle[\"vehicle-id\"]}\n              vehicle={vehicle}\n              onClick={() => {\n                setActiveVehicle(vehicle);\n                setShow(true);\n\n                window.gtag(\"event\", \"click\", {\n                  event_category: \"Results page\",\n                  event_label: \"vehicle-details-click\",\n                  value: `${vehicle[\"vehicle-id\"]}-${vehicle.driver.mobile}`,\n                });\n              }}\n            />\n          );\n        })\n      )}\n\n      <Modal\n        show={show}\n        animation={false}\n        onHide={() => {\n          setShow(false);\n          setActiveVehicle(undefined);\n        }}\n        dialogClassName=\"custom-modal\"\n      >\n        {activeVehicle && (\n          <VehicleDetailsModal\n            selectedVehicle={activeVehicle}\n            onHide={() => setShow(false)}\n          />\n        )}\n      </Modal>\n\n      <Row>\n        <Link className=\"back-to-home-link\" to=\"/\">\n          Main page\n        </Link>\n      </Row>\n    </div>\n  );\n};\n","import \"./App.css\";\n\nimport { FunctionComponent } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./pages/Home\";\nimport { SearchResults } from \"./pages/SearchResults\";\n\nexport const App: FunctionComponent = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Container style={{ maxWidth: 540 }}>\n        <Header />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/search-results\">\n              <SearchResults />\n            </Route>\n          </Switch>\n        </div>\n        <footer className=\"footer\">\n          <small>© PackPickup {new Date().getFullYear()}</small>\n        </footer>\n      </Container>\n    </HashRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","/* istanbul ignore file */\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}