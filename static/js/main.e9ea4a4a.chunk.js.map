{"version":3,"sources":["components/Header.tsx","pages/Home.tsx","components/Rating.tsx","pages/SearchResults.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Row","className","Col","xs","style","textAlign","marginTop","to","src","process","alt","Home","vehicleTypes","map","vehicleType","type","onClick","window","alert","Rating","rating","Array","_","i","SearchResults","vehicleTypeId","useLocation","search","split","vehiclesByType","useMemo","vehicles","filter","vehicle","filteredVehicle","driver","drivers","find","length","sm","name","area","city","country","backgroundImage","Number","App","basename","Container","maxWidth","exact","path","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9ea4a4a.chunk.js","sourcesContent":["import \"./Header.scss\";\n\nimport { FunctionComponent } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header: FunctionComponent = () => {\n  return (\n    <Row className=\"header\">\n      <Col xs=\"12\" style={{ textAlign: \"center\", marginTop: 12 }}>\n        <Link to=\"/\">\n          <img\n            className=\"logo\"\n            src={`${process.env.PUBLIC_URL}/logo.svg`}\n            alt=\"Pack pickup\"\n          />\n        </Link>\n        <div className=\"divider\" />\n      </Col>\n    </Row>\n  );\n};\n","import \"./Home.scss\";\n\nimport { FunctionComponent } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport vehicleTypes from \"../data/vehicle-types.json\";\n\nexport const Home: FunctionComponent = () => {\n  return (\n    <div className=\"home\">\n      <Row>\n        <Col xs=\"12\" className=\"banner-wrapper\">\n          <div className=\"country-selector\">\n            <img\n              src={process.env.PUBLIC_URL + \"/uae-flag.svg\"}\n              alt=\"UAE flag\"\n            />\n            <span>UAE</span>\n          </div>\n          <div className=\"user\">\n            <span>Guest</span>\n            <img src={process.env.PUBLIC_URL + \"/avatar.svg\"} alt=\"User\" />\n          </div>\n          <img\n            src={process.env.PUBLIC_URL + \"/home-bg.jpg\"}\n            alt=\"traffic on road\"\n            className=\"banner\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\">\n          <h1 className=\"title\">Hire! Packing and Transportation services</h1>\n        </Col>\n      </Row>\n      <Row>\n        {vehicleTypes.map((vehicleType) => (\n          <Col xs=\"6\" key={vehicleType[\"vehicle-type-id\"]} className=\"v-type\">\n            <Link\n              to={`/search-results/?v-type=${vehicleType[\"vehicle-type-id\"]}`}\n            >\n              <img\n                src={`${process.env.PUBLIC_URL}/vehicle-types/${vehicleType[\"image-url\"]}`}\n                alt={vehicleType.type}\n              />\n            </Link>\n          </Col>\n        ))}\n      </Row>\n      <Row>\n        <Col>\n          <img\n            onClick={() => window.alert(\"Work in progress...\")}\n            className=\"see-more\"\n            src={`${process.env.PUBLIC_URL}/vehicle-types/see-more-vehicles.svg`}\n            alt=\"See more\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import \"./Rating.scss\";\n\nimport { FunctionComponent } from \"react\";\n\ntype Props = {\n  rating: number;\n};\n\nexport const Rating: FunctionComponent<Props> = ({ rating }) => {\n  return (\n    <span className=\"rating-stars\">\n      {[...Array(rating)].map((_, i) => \"★\")}\n      {[...Array(5 - rating)].map((_, i) => \"☆\")}\n    </span>\n  );\n};\n","import \"./SearchResults.scss\";\n\nimport { Fragment, FunctionComponent, useMemo } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { Rating } from \"../components/Rating\";\nimport drivers from \"../data/drivers.json\";\nimport vehicleTypes from \"../data/vehicle-types.json\";\nimport vehicles from \"../data/vehicles.json\";\n\nexport const SearchResults: FunctionComponent = () => {\n  const { search } = useLocation();\n  const vehicleTypeId = search.split(\"?\")[1].split(\"=\")[1];\n\n  const vehiclesByType = useMemo(() => {\n    const filteredVehicles = vehicles.filter(\n      (vehicle) => vehicle[\"vehicle-type-id\"] === vehicleTypeId\n    );\n\n    return filteredVehicles.map((filteredVehicle) => ({\n      ...filteredVehicle,\n      driver: drivers.find(\n        (driver) => driver[\"vehicle-id\"] === filteredVehicle[\"vehicle-id\"]\n      ),\n    }));\n  }, [vehicleTypeId]);\n\n  const vehicleType = useMemo(() => {\n    return vehicleTypes.find(\n      (vehicleType) => vehicleType[\"vehicle-type-id\"] === vehicleTypeId\n    );\n  }, [vehicleTypeId]);\n\n  if (!vehicleType || vehiclesByType.length === 0) {\n    return (\n      <div className=\"no-results\">\n        No vehicles found. Please <Link to=\"/\">click here</Link> to navigate to\n        home page\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"search-results\">\n      <Row className=\"header\">\n        <Col xs=\"7\" sm=\"8\">\n          <div className=\"user\">\n            <img src={process.env.PUBLIC_URL + \"/avatar.svg\"} alt=\"User\" />\n            <span>Guest</span>\n          </div>\n          <h1>{vehicleType.type}</h1>\n        </Col>\n        <Col xs=\"5\" sm=\"4\">\n          <img\n            className=\"v-type-img\"\n            src={`${process.env.PUBLIC_URL}/vehicle-types/${vehicleType[\"image-url\"]}`}\n            alt={vehicleType.type}\n          />\n        </Col>\n      </Row>\n\n      {vehiclesByType.map((vehicle) => {\n        return (\n          <Row key={vehicle[\"vehicle-id\"]} className=\"result-item\">\n            <Col xs=\"4\" sm=\"3\">\n              <img\n                className=\"v-main-img\"\n                src={`${process.env.PUBLIC_URL}/vehicles/${vehicle[\"vehicle-id\"]}/main.jpg`}\n                alt={vehicle[\"vehicle-brand\"]}\n              />\n            </Col>\n            <Col xs=\"8\" sm=\"6\">\n              <h4>\n                {vehicle[\"vehicle-brand\"]} - {vehicle[\"brand-model\"]} -{\" \"}\n                {vehicle[\"model-year\"]}\n              </h4>\n              {vehicle.driver && (\n                <>\n                  <div>\n                    <img\n                      className=\"driver-name-avatar\"\n                      src={`${process.env.PUBLIC_URL}/green-avatar.svg`}\n                      alt=\"Driver\"\n                    />{\" \"}\n                    {vehicle.driver.name}\n                  </div>\n                  <div>Area: {vehicle.driver.area}</div>\n                  <div>\n                    {vehicle.driver.city}, {vehicle.driver.country}\n                  </div>\n                </>\n              )}\n            </Col>\n            {vehicle.driver && (\n              <>\n                <Col xs=\"4\" sm=\"1\" className=\"spacer\" />\n                <Col xs=\"8\" sm=\"3\" className=\"driver-info\">\n                  <>\n                    <div\n                      className=\"driver-image\"\n                      style={{\n                        backgroundImage: `url(${process.env.PUBLIC_URL}/vehicles/${vehicle[\"vehicle-id\"]}/driver.jpg)`,\n                      }}\n                    />\n                    <span className=\"rating\">\n                      <Rating rating={Number(vehicle.driver[\"rating-stars\"])} />\n                    </span>\n                  </>\n                </Col>\n              </>\n            )}\n          </Row>\n        );\n      })}\n    </div>\n  );\n};\n","import \"./App.css\";\n\nimport { FunctionComponent } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./pages/Home\";\nimport { SearchResults } from \"./pages/SearchResults\";\n\nexport const App: FunctionComponent = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Container style={{ maxWidth: 540 }}>\n        <Header />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/search-results\">\n              <SearchResults />\n            </Route>\n          </Switch>\n        </div>\n        <footer className=\"footer\">\n          <small>© PackPickup {new Date().getFullYear()}</small>\n        </footer>\n      </Container>\n    </HashRouter>\n  );\n};\n","/* istanbul ignore file */\n\nimport { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* istanbul ignore file */\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}